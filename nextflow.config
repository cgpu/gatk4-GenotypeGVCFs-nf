manifest {
    homePage = 'https://github.com/iarcbioinfo/gatk4-GenotypeGVCFs-nf'
    description = 'Nextflow pipeline for GATK4 GenotypeGVCFs'
    mainScript = 'gatk4-GenotypeGVCFs.nf'
}

docker.enabled = true

params {
        inputdir_file_regex  =  null
        ref_fasta            =  null
        output_dir           = "results"
        cohort               = "cohort"
        dbsnp                = "s3://lifebit-featured-datasets/pipelines/gatk-somatic-data/genome-bundle/igenomes/Homo_sapiens/GATK/hg19/dbsnp_138.hg19.excluding_sites_after_129.vcf"
        mills                = "s3://lifebit-featured-datasets/pipelines/gatk-somatic-data/genome-bundle/igenomes/Homo_sapiens/GATK/hg19/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf"
        axiom                = "s3://lifebit-featured-datasets/pipelines/gatk-somatic-data/genome-bundle/igenomes/Homo_sapiens/GATK/hg19/ALL.wex.axiom.20120206.snps_and_indels.genotypes.vcf"
        hapmap               = "s3://lifebit-featured-datasets/pipelines/gatk-somatic-data/genome-bundle/igenomes/Homo_sapiens/GATK/hg19/hapmap_3.3.hg19.sites.vcf"
        omni                 = "s3://lifebit-featured-datasets/pipelines/gatk-somatic-data/genome-bundle/igenomes/Homo_sapiens/GATK/hg19/1000G_omni2.5.hg19.sites.vcf"
        onekg                = "s3://lifebit-featured-datasets/pipelines/gatk-somatic-data/genome-bundle/igenomes/Homo_sapiens/GATK/hg19/1000G_phase1.snps.high_confidence.hg19.sites.vcf"
        cpu_
        mem_     
        timeout_
      
      }


process {
    withName: GenomicsDBImport 
    {
        container = "broadinstitute/gatk:latest"
        jobName = "GDB_import" 
    }
    withName: GenotypeGVCFs 
    {
        container = "broadinstitute/gatk:latest"
        jobName = "genotype_gvcfs"	  
    }
    withName: HardFilter 
    {
        container = "broadinstitute/gatk:latest"
        jobName = "hard_filter"
    }
    withName: GatherVcfs 
    {
        container = "broadinstitute/gatk:latest"
        jobName = "gather_thy_vcfs"
    }  
    withName: SID_VariantRecalibrator 
    {
        container = "broadinstitute/gatk:latest"
        jobName = "SID_var_recalib"
    }
    withName: SNV_VariantRecalibrator 
    {
        container = "broadinstitute/gatk:latest"
        jobName = "SNV_var_recalib"
    }
    withName: ApplyRecalibration 
    {
        container = "broadinstitute/gatk:latest"
        jobName = "apply_recalib"
    }
}